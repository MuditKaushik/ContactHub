@model ContactHub_MVC.Models.SignupModel.SignupViewModel
@{
    ViewBag.Title = "Registration";
}

<div class="modal-dialog" role="document">
    <div class="modal-content">
        @using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="modal-header">
                <h4 class="modal-title" id="myModal-label">Registration</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">First Name</label>
                    <div class="col-sm-8 col-md-8">
                        @Html.TextBoxFor(m => m.FirstName, new { @type = "text", @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Last Name</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.LastName, new { @type = "text", @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.LastName)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Email Address</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.EmailAddress, new { @type = "email", @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.EmailAddress)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Country</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.Country, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control", @id = "contryList" })
                        @Html.ValidationMessageFor(x => x.Country)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Username</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Username)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Password</label>
                    <div class="col-sm-8">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Password)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label" for="form-group-input">Confirm Password</label>
                    <div class="col-sm-8">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ConfirmPassword)
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Sign up</button>
            </div>
        }
    </div>
</div>
@Scripts.Render("~/Script/jQuery")
@Scripts.Render("~/Script/jQuery-Unobtrusive")
@Scripts.Render("~/Script/bootstrap")
<script>System.import("../Scripts/app/signup.js")</script>